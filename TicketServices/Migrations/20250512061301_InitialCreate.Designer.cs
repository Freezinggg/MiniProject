// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketServices;

#nullable disable

namespace TicketServices.Migrations
{
    [DbContext(typeof(TicketDBContext))]
    [Migration("20250512061301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicketServices.Model.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<int>("Pax")
                        .HasColumnType("integer");

                    b.Property<string>("TicketHolderEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TicketHolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TicketID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TicketValidFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TicketValidTo")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
